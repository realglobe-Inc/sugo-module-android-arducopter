apply plugin: 'com.android.library'

def artifactGroupId = 'jp.realglobe'
def artifactArtifactId = 'sugo-module-android-arducopter'
def artifactVersion = '4.6.0'
def artifactName = 'SUGO ArduCopter Module'
def artifactDescription = 'SUGO module of ArduCopter'
def artifactUrl = "https://github.com/realglobe-Inc/${artifactArtifactId}"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 1
        versionName artifactVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    lintOptions {
        disable 'InvalidPackage'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.2.0'
    testCompile 'junit:junit:4.12'
    compile 'com.o3dr.android:dronekit-android:3.0.2'
    compile(group: 'jp.realglobe', name: 'sugo-actor', version: '3.0.2') {
        // excluding org.json which is provided by Android
        exclude group: 'org.json', module: 'json'
    }
}

apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

group = artifactGroupId
version = artifactVersion

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'

                artifactId artifactArtifactId
                name artifactName
                description artifactDescription
                url artifactUrl

                licenses {
                    license {
                        name 'Apache License, Version 2.0'
                        url 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name 'Daisuke Fukuchi'
                        email 'fukuchidaisuke@realglobe.jp'
                    }
                }
                scm {
                    connection "scm:git:git://github.com/realglobe-Inc/${artifactArtifactId}.git"
                    developerConnection "scm:git:ssh://github.com:realglobe-Inc/${artifactArtifactId}.git"
                    url artifactUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    title = artifactName
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

    options {
        links('http://docs.oracle.com/javase/jp/8/docs/api/', 'https://developer.android.com/reference/');
        setMemberLevel(JavadocMemberLevel.PUBLIC)
        docEncoding = 'UTF-8'
        encoding = 'UTF-8'
        charSet = 'UTF-8'
        locale = 'ja_JP'
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = project.hasProperty('bintray_user') ? project.property('bintray_user') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintray_api_key') ? project.property('bintray_api_key') : System.getenv('BINTRAY_API_KEY')
    configurations = ['archives']
    publish = true
    override = false
    pkg {
        repo = 'maven'
        name = artifactArtifactId
        desc = artifactDescription
        websiteUrl = artifactUrl
        issueTrackerUrl = "${artifactUrl}/issues"
        vcsUrl = artifactUrl
        licenses = ['Apache-2.0']
        githubRepo = "realglobe-Inc/${artifactArtifactId}"
        version {
            name = artifactVersion
            released = new Date()
        }
    }
}
